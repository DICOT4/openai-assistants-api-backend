services:

  #  reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - api
      - mongo-express
      - portainer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: api:${API_VERSION:-latest}
    container_name: api
    restart: always
    expose:
      - 3000
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      # Adds current directory as volume.
      - .:/app/src/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`yourdomain.com`)"
      - "traefik.http.routers.fastapi.entrypoints=web"
      - "traefik.http.routers.fastapi.tls.certresolver=myresolver"
      - "traefik.docker.network=web"

  database:
    image: mongo:latest
    container_name: database
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${DICOTA_DB_USER}
#      - MONGO_INITDB_ROOT_PASSWORD=${DICOTA_DB_PASS}
    healthcheck:
      test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mongodb-data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://${DICOTA_DB_HOST}:${DICOTA_DB_PORT}/
      - ME_CONFIG_SITE_BASEURL=/mongo-admin
      - ME_CONFIG_BASICAUTH_ENABLED=true
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_WEB_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_WEB_PASSWORD}

  #  monitoring
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - default


volumes:
  mongodb-data:
  portainer_data:
